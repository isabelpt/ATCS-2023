"""
@author: Isabel Prado-Tucker
@version: May 2024

Comments partially generated by ChatGPT
"""
import pygame

# Draws and updates the frequency visuals on the bottom of the screen
class Freq_Visual:
    def __init__(self, x, y, freq, color, width, max_height):
        """
        Initializes the Frequency Visual object with screen dimensions and a Song object.

        Parameters:
            x (int): Fixed x-value of the visual.
            y (int): Starting y-value of the visual.
            frequency (int): Frequency of the visual, used to get song decibel level.
            color (tuple): Fixed color of the visual.
            width (int): Fixed width of the visual.
            max_height (Song): Maximum height of the visual.
        """
        # Initialize attributes of the visual representation
        self.x, self.y, self.frequency, self.color = x, y, freq, color
        self.width, self.max_height = width, max_height

        # Initialize height, decibel range, and calculate height conversion factor
        self.height, self.min_decibel, self.max_decibel = 0, -80, 0
        self.decibel_height = (self.max_height) / (self.max_decibel - self.min_decibel)

    def update(self, change_time, decibel):
        """
        Updates the Frequency Visual object to change height based on time and decibel.

        Parameters:
            change_time (int): Interval of time since the last screen change.
            decibel (int): Starting y-value of the visual.
        """
        # Calculate desired height based on decibel level
        desired_height = decibel * self.decibel_height + self.max_height
        # Adjust current height gradually towards desired height
        self.height += ((desired_height - self.height) / 0.1) * change_time
        # Ensure height stays within bounds
        self.height = max(min(self.max_height, self.height), 0)

    def draw(self, screen):
        """
        Draws the Frequency Visual object.

        Parameters:
            screen (Pygame Screen): Scren to draw visual onto.
        """
        # Draw rectangle representing the visual representation on the screen
        pygame.draw.rect(screen, self.color, (self.x, self.y + self.max_height - self.height + 75, self.width, self.height))
